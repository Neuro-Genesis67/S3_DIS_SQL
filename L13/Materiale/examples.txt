//opg5pgm

	import java.io.IOException;
	import org.eclipse.paho.client.mqttv3.MqttClient;
	import org.eclipse.paho.client.mqttv3.MqttConnectOptions;
	import org.eclipse.paho.client.mqttv3.MqttException;
	import org.eclipse.paho.client.mqttv3.MqttMessage;
	import org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;

	public class MQTTprogram {
	
		public static void main(String[] args) throws InterruptedException {
		// TODO Auto-generated method stub
            	String broker = "tcp://192.168.1.1:1883";
            	MemoryPersistence persistence = new MemoryPersistence();
            	try {
                        MqttClient sampleClient = new MqttClient(broker,  MqttClient.generateClientId(), persistence);
                        MqttConnectOptions connOpts = new MqttConnectOptions();
                        connOpts.setCleanSession(true);
                        System.out.println("Connecting to broker: " + broker);
                        sampleClient.connect(connOpts);
                        System.out.println("Connected");           
                       	// put real stuff here
                        sampleClient.disconnect();
                        System.out.println("Disconnected");
                        System.exit(0);
            	} catch (MqttException me) {
                        System.out.println("reason " + me.getReasonCode());
                        System.out.println("msg " + me.getMessage());
                        System.out.println("loc " + me.getLocalizedMessage());
                        System.out.println("cause " + me.getCause());
                        System.out.println("excep " + me);
                        me.printStackTrace();

            }
	}
}

//opg6pgm

			MqttMessage message = new MqttMessage();
                        message.setPayload(content.getBytes());
                        System.out.println(content.getBytes());
                        sampleClient.publish(topic, message);
                        System.out.println("Message published");

//opg7pgm

import org.json.JSONObject;
public class SimpleMqttCallBack implements MqttCallback{
	int status = 0;	
	 public void connectionLost(Throwable throwable) {
		    System.out.println("Connection to MQTT broker lost!");
		  }

		  public void messageArrived(String s, MqttMessage mqttMessage) throws Exception {
			String res= new String(mqttMessage.getPayload());  
		    // res indeholder en måling som et JSON-object
		  }

		  public void deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken) {
		    // not used in this example
		  }
} 